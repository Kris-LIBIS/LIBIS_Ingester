name: 'File decomposition workflow'
description: 'Workflow for files that are grouped and collected from a single dir'
tasks:
  - name: DirCollector
    class: Libis::Ingester::DirCollector
    subdirs: recursive
  - name: PreProcess
    subitems: true
    recursive: true
    tasks:
      - name: FilenameCheck
        class: Libis::Ingester::FileNameChecker
      - name: ChecksumCheck
        class: Libis::Ingester::ChecksumTester
        checksum_type: :MD5
      - name: VirusCheck
        class: Libis::Ingester::VirusChecker
      - name: FormatIdentifier
        class: Libis::Ingester::FormatIdentifier
      - name: MimetypeCheck
        class: Libis::Ingester::FileMimetypeChecker
  - name: PreIngest
    subitems: false
    recursive: false
    tasks:
      - class: Libis::Ingester::FileGrouper
      - class: Libis::Ingester::IeBuilder
      - class: Libis::Ingester::ManifestationBuilder
      - class: Libis::Ingester::FormatIdentifier
        recursive: true
      - class: Libis::Ingester::MetadataAlmaCollector
        name: MetadataCollector
        term: 'item.name'
        title_to_name: false
      - class: Libis::Ingester::CollectionCreator
        name: CollectionCreator
  - name: Ingest
    subitems: false
    recursive: false
    tasks:
      - class: Libis::Ingester::MetsCreator
      - class: Libis::Ingester::Submitter
input:
  location:
    description: 'Path name where the files should be collected'
    propagate_to: 'DirCollector'
  selection:
    description: 'Regular expression to match file name against. Files not matching the expresion will fail.'
    propagate_to: 'DirCollector FilenameCheck#filename_regexp'
  mimetype:
    description: 'Regular expression to match file name against. Files not matching the expresion will fail.'
    propagate_to: 'MimetypeCheck#mimetype_regexp'
  checksum_file:
    description: 'File with MD5 checksums for each file'
    propagate_to: 'ChecksumCheck'
  group_regex:
    description: 'Regular expression for matching against the file names; no grouping if nil.'
    propagate_to: 'FileGrouper'
  collection_label:
    description: 'A Ruby expression for the collection path to put the target in.'
    propagate_to: 'FileGrouper'
  group_label:
    description: 'A Ruby expression for the label (name) of the group; default: $1.'
    propagate_to: 'FileGrouper'
  file_label:
    description: 'A Ruby expression for the label (name) of the files; default: file name.'
    propagate_to: 'FileGrouper'
  base_collection:
    description: 'Collection to put the tree of collections and/or IE objects under.'
    propagate_to: 'CollectionCreator#collection MetsCreator#collection'
  navigate_collections:
    description: 'Allow to navigate the collections.'
    propagate_to: 'CollectionCreator#navigate'
  publish_collections:
    description: 'Publish the collections.'
    propagate_to: 'CollectionCreator#publish'
  metadata_regex:
    description: 'Select the object for metadata.'
    propagate_to: 'MetadataCollector#match_regex'
  metadata_term:
    description: 'Value to match for collections metadata.'
    propagate_to: 'MetadataCollector#match_term'
  metadata_mapping_file:
    description: 'File with metadata mapping.'
    propagate_to: 'MetadataCollector#mapping_file'